/*        FRAM Library for Arduino and Energia
*************************************
  Пример использования библиотеки FRAM на микросхеме: FM24C04B
     Микросхема имеет на борту 4-Kbit(512 x 8).
     Другими словами, имеем 2 страницы по 256 ячеек,итого с двух страниц доступно 512 ячеек памяти (одна ячейка 8 бит).

  Возможные комбинации адресов (всего 4 комбинации):
       0x50   // адрес первой страницы FM24C04B-G. Адрес второй страницы получается автоматически прибавлением единицы к первому адресу - 0x51
       0x52   // адрес первой страницы FM24C04B-G. Адрес второй страницы получается автоматически прибавлением единицы к первому адресу - 0x53
       0x54   // адрес первой страницы FM24C04B-G. Адрес второй страницы получается автоматически прибавлением единицы к первому адресу - 0x55
       0x56   // адрес первой страницы FM24C04B-G. Адрес второй страницы получается автоматически прибавлением единицы к первому адресу - 0x5

  I2C адреса страниц выставляются комбинированием контактов A1 и A2 (смотреть в даташите).
  Адрес страницы 1-байтный(8бит), поэтому число ячеек на странице 256.

  P.S. Библиотека не учитывает то, что было написано.
  Это означает, что, например, если вы напишете длинное число на странице = 0, адрес = 20,
  а после того, как вы напишете целое число на странице = 0 и адресе = 22,
  ваше длинное число будет повреждено, потому что вы перезаписали его последние два байта.

Datasheet : http://datasheet.octopart.com/FM24C04B-G-Ramtron-datasheet-11038332.pdf

*************************************

  Автор:  B@tto
  Контакты: batto@hotmail.fr
  Сайт: battomicro.wordpress.com
  Версия: 1.0
  Создана: 15.04.2014г. (начальный выпуск)

*************************************
  
  Внёс доработку в библиотеку и в пример: Otto
  Версия: 1.1
  Изменён: 13.08.2021г.
    
*/

#include <FRAM.h>   //подключаем библиотеку FRAM.
#include <Wire.h>   //подключаем библиотеку Wire для связи по I2C.

FRAM fram(0b00);    //Адрес i2c определяется состоянием контактов A2 и A1 (указываем в бинарном виде), а в hex это: 0x50.
                    //Например, если A2 = VCC и A1 = GND, тогда адрес: FRAM fram (0b10), что будет в hex: 0x52.

void setup() {

  Serial.begin(9600); //Инициализируем последовательный порт.

  //***** ЗАПИСЬ *****//
  //Запись с типом данных byte
  fram.WriteByte(0, 5, 55);              //Записываем в 5-й сектор первой страницы число 55 (0 - это первая страница, 1 - вторая страница)

  //Запись с типом данных int
  fram.WriteInt(0, 17, 30000);           //Записываем в 17-й сектор первой страницы число 30000

  //Запись с типом данных long
  fram.WriteLong(1, 44, -27500);         //Записываем в 44-й сектор второй страницы отрицательное число -27500

  //Запись с типом данных float
  fram.WriteFloat(1, 210, 3.1415);        //Записываем в 210-й сектор второй страницы число 3.1415


  //***** ЧТЕНИЕ *****//
  //Чтение с типом данных byte
  Serial.println(fram.ReadByte(0, 5));       //Читаем с первой страницы из 5-го сектора значение и выводим в Serial

  //Чтение с типом данных int
  Serial.println(fram.ReadInt(0, 17));       //Читаем с первой страницы начиная с 17-го сектора значение и выводим в Serial

  //Чтение с типом данных long
  Serial.println(fram.ReadLong(1, 44));      //Читаем со второй страницы начиная с 44-го сектора значение и выводим в Serial

  // Чтение с типом данных float
  Serial.println(fram.ReadFloat(1, 210), 4);  //Читаем с 1-й страницы и начиная с 210-й ячейки значение и выводим в Serial с 4-мя знаками после запятой.

}

void loop() {

}